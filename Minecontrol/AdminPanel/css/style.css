/* YOU CAN USE THESE GLOBALLY from what I gathered */
:root{
    --home: #4a5dff;
    --dashboard: #9C27B0;
    --layout: #2196F3;
    --settings: #ffd079ee;
    --logs: #FFC107;
    --Mines: #ff8f0760;
    --Reports: #9C27B0;
    --Inventories: #e5bbff; 

    --headerBackground: #383838;
    --sideMenuBackground: rgb(10, 30, 49);
    --sideMenuBorder:#151515;
    --sideMenuIcon: #ECEFF1;
    --sideMenuTextColor: #ECEFF1;
    --sideMenuArrow: #afac90;
    --submenu-container: #FFFFFF;
    --labelLightColor: #cecece;
}

#header {
    width: 100%;
    height: 60px;
    background-color: var(--headerBackground);
}

#body {
    display: flex;
    /*New thing learned v v > calc is a function used for math.. calculations in CSS */
    height: calc(100vh - 100px); /* visible area height minus both header n' footer */
}

#sidemenu {
    width: 300px;
    background-color: var(--sideMenuBackground);
}

#content {
    flex-grow: 1; /* This line makes "content" take the remaining space available */ 
    background-color: rgb(199, 188, 188);
}

#footer {
    width: 100%;
    height: 40px;
    background-color: rgb(84, 84, 79);
}

#headerleft{
    float: center;
}


/*----------------------------------------------------------------------
In case I need it l8r:
    Calc(): https://developer.mozilla.org/en-US/docs/Web/CSS/calc
    Flex-grow: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow 

    Should I use vh or percentage?
        vh is the viewport height. the number you attach is a percentage so height: 100vh will be the 100% height 
        of whatever the device is. % is the portion of the container the element is held inside of so height: 100% 
        will be the height of the container. It's easier to visualize.
    URL: https://forum.freecodecamp.org/t/what-is-the-difference-between-css-unit-vh-and-and-when-to-use-which-unit/297814
----------------------------------------------------------------------*/
